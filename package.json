{
    "name": "codex-editor-extension",
    "displayName": "Codex Scripture Editor",
    "description": "Support for `.codex` notebooks, `.bible` source files, and `.scripture` raw scripture files. Includes Translator's Copilot Language Server for scripture drafting and checking diagnostics and features.",
    "publisher": "project-accelerate",
    "version": "0.0.1",
    "engines": {
        "node": ">=16.17.1",
        "vscode": "^1.78.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onNotebook:codex-type",
        "onStartupFinished"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "notebookEditorDecorations": [
            {
                "type": "codex-type",
                "viewType": "codex-type",
                "displayName": "Codex Scripture Editor Notebook CodeLens",
                "selector": [
                    {
                        "filenamePattern": "*.codex"
                    }
                ]
            }
        ],
        "views": {
            "scripture-explorer-activity-bar": [
                {
                    "id": "scripture-explorer-activity-bar",
                    "name": "Scripture Explorer",
                    "visibility": "visible",
                    "icon": "$(open-editors-view-icon)"
                }
            ],
            "resource-explorer": [
                {
                    "id": "resource-explorer",
                    "name": "Resource Explorer",
                    "visibility": "visible",
                    "icon": "$(open-editors-view-icon)"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "scripture-explorer-activity-bar",
                    "title": "Scripture Explorer",
                    "icon": "$(open-editors-view-icon)"
                },
                {
                    "id": "resource-explorer",
                    "title": "Resource Explorer",
                    "icon": "$(open-editors-view-icon)"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "resource-explorer.refreshEntry",
                    "when": "view == resource-explorer",
                    "group": "navigation"
                },
                {
                    "command": "scripture-explorer-activity-bar.refreshEntry",
                    "when": "view == scripture-explorer-activity-bar",
                    "group": "navigation"
                }
            ],
            "commandPalette": [
                {
                    "command": "commentsExtension.createNote",
                    "when": "false"
                },
                {
                    "command": "commentsExtension.replyNote",
                    "when": "false"
                },
                {
                    "command": "commentsExtension.deleteNote",
                    "when": "false"
                },
                {
                    "command": "commentsExtension.deleteNoteComment",
                    "when": "false"
                }
            ],
            "comments/commentThread/title": [
                {
                    "command": "commentsExtension.deleteNote",
                    "group": "navigation",
                    "when": "commentController == comment-sample && !commentThreadIsEmpty"
                }
            ],
            "comments/commentThread/context": [
                {
                    "command": "commentsExtension.createNote",
                    "group": "inline",
                    "when": "commentController == comment-sample && commentThreadIsEmpty"
                },
                {
                    "command": "commentsExtension.replyNote",
                    "group": "inline",
                    "when": "commentController == comment-sample && !commentThreadIsEmpty"
                },
                {
                    "command": "commentsExtension.startDraft",
                    "group": "inline",
                    "when": "commentController == comment-sample && commentThreadIsEmpty"
                },
                {
                    "command": "commentsExtension.finishDraft",
                    "group": "inline",
                    "when": "commentController == comment-sample && commentThread == draft"
                }
            ],
            "comments/comment/title": [
                {
                    "command": "commentsExtension.editNote",
                    "group": "group@1",
                    "when": "commentController == comment-sample"
                },
                {
                    "command": "commentsExtension.deleteNoteComment",
                    "group": "group@2",
                    "when": "commentController == comment-sample && comment == canDelete"
                }
            ],
            "comments/comment/context": [
                {
                    "command": "commentsExtension.cancelsaveNote",
                    "group": "inline@1",
                    "when": "commentController == comment-sample"
                },
                {
                    "command": "commentsExtension.saveNote",
                    "group": "inline@2",
                    "when": "commentController == comment-sample"
                }
            ]
        },
        "commands": [
            {
                "title": "Start a new Project",
                "shortTitle": "Start a new Project",
                "command": "codex-editor-extension.initializeNewProject"
            },
            {
                "command": "codex-notebook-extension.openFile",
                "title": "Open File"
            },
            {
                "command": "codex-editor-extension.indexVrefs",
                "title": "indexVrefs"
            },
            {
                "command": "codex-editor-extension.checkTaskStatus",
                "title": "checkTaskStatus"
            },
            {
                "command": "codex-notebook-extension.openChapter",
                "title": "Open Chapter"
            },
            {
                "command": "codex-editor-extension.showReferences",
                "title": "Show Scripture References"
            },
            {
                "command": "codex-editor-extension.showSource",
                "title": "Show Scripture Source"
            },
            {
                "command": "codex-editor-extension.createCodexNotebook",
                "title": "Create Codex Notebook"
            },
            {
                "command": "codex-notebook-extension.createCodexProject",
                "title": "Create Codex Project"
            },
            {
                "command": "resource-explorer.refreshEntry",
                "title": "Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "scripture-explorer-activity-bar.refreshEntry",
                "title": "Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "pygls.server.restart",
                "title": "Restart Language Server",
                "category": "pygls"
            },
            {
                "command": "pygls.server.executeCommand",
                "title": "Execute Command",
                "category": "pygls"
            },
            {
                "command": "pygls.server.EmbedDocument",
                "title": "Embed Document",
                "category": "pygls"
            },
            {
                "command": "pygls.server.add_dictionary",
                "title": "Add to Dictionary",
                "category": "pygls"
            },
            {
                "command": "commentsExtension.createNote",
                "title": "Create Note",
                "enablement": "!commentIsEmpty"
            },
            {
                "command": "commentsExtension.replyNote",
                "title": "Reply",
                "enablement": "!commentIsEmpty"
            },
            {
                "command": "commentsExtension.editNote",
                "title": "Edit",
                "icon": {
                    "dark": "resources/edit_inverse.svg",
                    "light": "resources/edit.svg"
                }
            },
            {
                "command": "commentsExtension.deleteNote",
                "title": "Delete",
                "icon": {
                    "dark": "resources/close_inverse.svg",
                    "light": "resources/close.svg"
                }
            },
            {
                "command": "commentsExtension.deleteNoteComment",
                "title": "Delete",
                "icon": {
                    "dark": "resources/close_inverse.svg",
                    "light": "resources/close.svg"
                }
            },
            {
                "command": "commentsExtension.saveNote",
                "title": "Save"
            },
            {
                "command": "commentsExtension.cancelsaveNote",
                "title": "Cancel"
            },
            {
                "command": "commentsExtension.startDraft",
                "title": "Start Draft",
                "enablement": "!commentIsEmpty"
            },
            {
                "command": "commentsExtension.finishDraft",
                "title": "Finish Draft"
            },
            {
                "command": "commentsExtension.dispose",
                "title": "Remove All Notes"
            }
        ],
        "notebooks": [
            {
                "type": "codex-type",
                "displayName": "Codex Scripture Editor Notebook",
                "selector": [
                    {
                        "filenamePattern": "*.codex"
                    }
                ]
            }
        ],
        "languages": [
            {
                "id": "scripture",
                "extensions": [
                    ".codex",
                    ".scripture"
                ],
                "configuration": "./src/scripture-language-configuration.json"
            }
        ],
        "configuration": [
            {
                "type": "object",
                "title": "Json Server Configuration",
                "properties": {
                    "pygls.jsonServer.exampleConfiguration": {
                        "scope": "resource",
                        "type": "string",
                        "default": "You can override this message"
                    }
                }
            },
            {
                "type": "object",
                "title": "Server Configuration",
                "properties": {
                    "pygls.server.cwd": {
                        "scope": "resource",
                        "type": "string",
                        "description": "The working directory from which to launch the server.",
                        "markdownDescription": "The working directory from which to launch the server.\nIf blank, this will default to the `examples/servers` directory."
                    },
                    "pygls.server.relative_server_path": {
                        "scope": "resource",
                        "type": "string",
                        "description": "The working directory from which to launch the server.",
                        "markdownDescription": "The working directory from which to launch the server.\nIf blank, this will default to the `examples/servers` directory."
                    },
                    "pygls.server.workspace": {
                        "scope": "resource",
                        "type": "string",
                        "description": "The workspace directory (for debugging)"
                    },
                    "pygls.server.debug": {
                        "scope": "resource",
                        "default": false,
                        "type": "boolean",
                        "description": "Enable debugging of the server process."
                    },
                    "pygls.server.debugHost": {
                        "scope": "resource",
                        "default": "localhost",
                        "type": "string",
                        "description": "The host on which the server process to debug is running."
                    },
                    "pygls.server.debugPort": {
                        "scope": "resource",
                        "default": 5678,
                        "type": "integer",
                        "description": "The port number on which the server process to debug is listening."
                    },
                    "pygls.server.launchScript": {
                        "scope": "resource",
                        "type": "string",
                        "default": "server.py",
                        "description": "The python script to run when launching the server.",
                        "markdownDescription": "The python script to run when launching the server.\n Relative to #pygls.server.cwd#"
                    },
                    "pygls.server.pythonPath": {
                        "scope": "resource",
                        "type": "string",
                        "default": "python3",
                        "description": "The python interpreter to use to run the server.\nBy default, this extension will attempt to use the Python interpreter configured via the Python extension, setting this setting will override this behavior."
                    },
                    "pygls.trace.server": {
                        "scope": "resource",
                        "type": "string",
                        "default": "off",
                        "enum": [
                            "off",
                            "messages",
                            "verbose"
                        ],
                        "description": "Controls if LSP messages send to/from the server should be logged.",
                        "enumDescriptions": [
                            "do not log any lsp messages",
                            "log all lsp messages sent to/from the server",
                            "log all lsp messages sent to/from the server, including their contents"
                        ]
                    }
                }
            },
            {
                "type": "object",
                "title": "Client Configuration",
                "properties": {
                    "pygls.client.documentSelector": {
                        "scope": "window",
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "default": [
                            {
                                "scheme": "file",
                                "language": "json"
                            }
                        ],
                        "description": "The client uses this to decide which documents the server is able to help with.",
                        "markdownDescription": "The client uses this to decide which documents the server is able to help with.\n See [DocumentSelector](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentFilter) in the LSP Specification for more details."
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -b",
        "lint": "eslint src --ext ts",
        "watch": "tsc -b --watch",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js",
        "format": "prettier --write ."
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^8.2.2",
        "@types/node": "14.x",
        "@types/semver": "^7.5.6",
        "@types/sinon": "^17.0.3",
        "@types/vscode": "^1.74.0",
        "@typescript-eslint/eslint-plugin": "^6.7.0",
        "@typescript-eslint/parser": "^6.7.0",
        "@vscode/test-electron": "^2.3.8",
        "eslint": "^7.27.0",
        "mocha": "^10.2.0",
        "prettier": "^3.1.1",
        "typescript": "^5.3.2"
    },
    "dependencies": {
        "@vscode/python-extension": "^1.0.5",
        "codex-types": "^0.0.2",
        "meilisearch": "^0.37.0",
        "semver": "^7.6.0",
        "sinon": "^17.0.1",
        "vscode-languageclient": "^9.0.1"
    },
    "overrides": {
        "minimatch": "5.1.2",
        "glob": "8.1.0"
    }
}
